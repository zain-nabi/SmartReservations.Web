@model SmartReservation.Models.OrderViewModel
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    int i = 0;
    var required = string.Empty;
    var selected = string.Empty;
}

<main id="content" role="main" class="main">
    <div class="content container-fluid">
        <div class="page-header">
            <div class="row align-items-center">
                <div class="col-sm mb-2 mb-sm-0">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb breadcrumb-no-gutter">
                            <li class="breadcrumb-item"><span class="breadcrumb-link">Order</span></li>
                            <li class="breadcrumb-item active" aria-current="page">Create</li>
                        </ol>
                    </nav>

                    <h1 class="page-header-title">New Order</h1>
                </div>
            </div>
        </div>

        <!-- For Validation -->
        <!-- End For Validation -->
        <div class="row justify-content-lg-center">
            <div class="col-lg-9">
                <div class="card">
                    <div class="card-header bg-soft-secondary">
                        <h5 class="card-header-title">
                            Order Processing Form - ( Dinners ): @Model.NoOfPeople
                        </h5>
                    </div>

                    <div class="card-body">
                        <form class="row g-3 js-validate" asp-controller="Order" asp-action="Create" method="post" id="QuotationForm">
                            <div class="col-md-12">
                                <!-- Table -->
                                <div class="table-responsive">
                                    <table class="table table-lg table-borderless table-thead-bordered table-nowrap table-align-middle" id="tblDimensions" style="width:100%">
                                        <thead class="thead-light">
                                            <tr>
                                                <th>Line No</th>
                                                <th>Quantity</th>
                                                <th>Menu Item</th>
                                            </tr>
                                        </thead>

                                        <tbody>
                                            @for (@i = 1; @i < 6; @i++)
                                            {
                                                <tr class="rowClass">
                                                    <td style="width:2%"><label id="txtLineNo-@i">@i</label></td>
                                                    <td style="width:10%" class="js-form-message">
                                                        <div class="js-quantity-counter input-group-quantity-counter">
                                                            <input required type="number" name="Plates" id="@("txtQty"+i)"  class="js-result form-control input-group-quantity-counter-control formClass">

                                                            <div class="input-group-quantity-counter-toggle">
                                                                <a class="js-minus input-group-quantity-counter-btn" href="javascript:;">
                                                                    <i class="tio-remove"></i>
                                                                </a>
                                                                <a class="js-plus input-group-quantity-counter-btn" href="javascript:;">
                                                                    <i class="tio-add"></i>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </td>
                                                    <td style="width:10%" class="js-form-message">
                                                        <select class="js-select2-custom custom-select formClass" id="@("txtItem"+i)" name="Item" size="1" style="opacity: 0;"
                                                            data-msg="Please select an Item."
                                                            data-hs-select2-options='{
                                                "minimumResultsForSearch": "Infinity",
                                                "placeholder": "Select a Item"
                                                }'>
                                                            <option label="empty"></option>
                                                            @foreach(var item in Model.MenuItemsList)
                                                            {
                                                                <option value="@item.Text">@item.Text</option>
                                                            }
                                                        </select>                                                    
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    <a href="#" class="form-link btn btn-sm btn-no-focus btn-ghost-primary" id="addRow"><i class="tio-add"></i> Add Row</a>

                                </div>
                            </div>
                            <div class="col-12">
                                <button type="submit" class="btn btn-primary" id="btnSave">Process</button>
                            </div>

                            @Html.HiddenFor(model => model.Order.orderID)
                            @Html.HiddenFor(model => model.Order.Item)
                            @Html.HiddenFor(model => model.Order.Price)
                            @Html.HiddenFor(model => model.RestaurantID)
                            @Html.HiddenFor(model => model.ReservationID)
                            <input type="hidden" asp-for="QuoteLineHF" />
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- End Row -->
    </div>
</main>

<style>
    .flex-row {
        display: flex;
        flex-wrap: wrap;
    }
</style>
@section scripts{
<script src="~/js/bloodhound.min.js"></script>
<script src="~/js/handlebars.min-v4.7.7.js"></script>
<script src="~/js/typeahead.bundle.min.js"></script>
<!-- JS Implementing Plugins -->
<!-- JS Front -->
<script>
    var counter = 1;
    var parcels = 0;
    var dataSet = [];

    var counter1 = 1;
    var parcels1 = 0;
    var dataSet1 = [];

    var lastValue = '';
    $("#txtQty5").on('change keyup paste mouseup', function () {
        if ($(this).val() != lastValue)
        {
            lastValue = $(this).val();
            document.getElementById('addRow').disabled = false;
        }
    });


    $(document).ready(function () {


        var v = document.getElementById('txtQty5').value;
        if (v != null) {
            document.getElementById('addRow').disabled = true;
        }

        var uniqueID = 6;
        $('#addRow').on('click',
            function() {
                var html = `<tr class="rowClass">
                                <td style="width:2%" ><label id="txtLineNo${uniqueID}">${uniqueID}</label></td>
                                <td style="width:10%"  class="js-form-message">
                                   <div class="js-quantity-counter input-group-quantity-counter">
                                        <input required type="number" id="txtQty${uniqueID}" name="Plates" required class="js-result form-control input-group-quantity-counter-control formClass">

                                        <div class="input-group-quantity-counter-toggle">
                                            <a class="js-minus input-group-quantity-counter-btn" href="javascript:;">
                                                <i class="tio-remove"></i>
                                            </a>
                                            <a class="js-plus input-group-quantity-counter-btn" href="javascript:;">
                                                <i class="tio-add"></i>
                                            </a>
                                        </div>
                                    </div>
                                        <span style="color: #ed4c78;display: none;font-size: 80%;" id="ddlLoadErrorMessageQty${uniqueID}">This field is required.</span>
                                </td>
                                <td style="width:10%"  class="js-form-message">
                                        <select class="js-select2-custom custom-select formClass" name="Item" size="1" id="txtDescription${uniqueID}" required
                                                data-hs-select2-options='{ "minimumResultsForSearch": "Infinity","placeholder": "Load" }'>
                                            <option></option>
                                            @foreach(var item in Model.MenuItemsList){
                                                <option value="@item.Text">@item.Text</option>
                                            }
                                        </select>
                                    <span style="color: #ed4c78;display: none;font-size: 80%;" id="ddlLoadErrorMessage${uniqueID}">This field is required.</span>
                                </td>
                            </tr>`;

                $('#tblDimensions tr:last').after(html);
                uniqueID++;


                $('.js-select2-custom').each(function () {
                    var select2 = $.HSCore.components.HSSelect2.init($(this));
                });

                const res = $('.rowClass').map(function () {
                    var obj = {};
                    $(this).find('input.formClass, select.formClass').each(function (i, el) {
                        if (el.value != "") {
                            obj[el.name] = el.value;
                        }
                    })
                    return obj
                }).get()

                document.getElementById('QuoteLineHF').value = '';
                $('#QuoteLineHF').val(encodeURIComponent(JSON.stringify(res)));
                dataSet.push(res);
            });

        $('#btnSave').on('click', function (e) {


            const response = $('.rowClass').map(function () {
                var obj = {};
                $(this).find('input.formClass, select.formClass').each(function (i, el) {
                    if (el.value != "") {
                        obj[el.name] = el.value;
                    }
                })
                return obj
            }).get()

            document.getElementById('QuoteLineHF').value = '';
            $('#QuoteLineHF').val(encodeURIComponent(JSON.stringify(response)));
            dataSet.push(response);

            $('.rowClass').map(function () {
                $(this).find('input.formClass').each(function (i, el)
                {
                    if ($(el).attr('class').toLocaleLowerCase().indexOf("is-invalid") != -1) {
                        e.preventDefault();
                    }
                })
            }).get();


            //$('#tblDimensions tr').each(function (i, el)
            //{
            //    $(this).find('input.formClass').each(function (ii, el) {
            //            if ($(el).val().length != 0)
            //            {
            //                $('#tblDimensions').find('tr').eq(i).find(':input, select').each(function (ix, el) {
            //                    if ($(el).val().length == 0)
            //                    {
            //                        var lastChar = el.id.substr(el.id.length - 1);
            //                        $("#ddlLoadErrorMessage" + lastChar).css("display", true ? "block" : "none");
            //                        $("#ddlLoadErrorMessageQty" + lastChar).css("display", true ? "block" : "none");


            //                        $(this).change(function () {
            //                            $("#ddlLoadErrorMessage" + lastChar).css("display", false ? "block" : "none");
            //                            $("#ddlLoadErrorMessageQty" + lastChar).css("display", false ? "block" : "none");
            //                        });

            //                        e.preventDefault();
            //                    }
            //                });


            //                var table = $('table');
            //                var rows = table.find('tr');
            //                var error = 0;
            //                for (i = 2; i < rows.length; i++)
            //                {
            //                    var cell = rows.eq(i).find('td');
            //                    for (a = 0; a < cell.length; a++)
            //                    {
            //                        var input = cell.eq(a).find('input');
            //                        var sel = ("#txtDescription" + i);
            //                        var sel = ("#txtDescription" + i);

            //                        if ($(sel).prop('selectedIndex') != 0) {
            //                            $("#ddlLoadErrorMessage" + i).css("display", false ? "block" : "none");
            //                        }


            //                        if (input.val() != "")
            //                        {
            //                            var errorMessageIDs = $(this).nextAll('span').attr('id');
            //                            $("span#" + errorMessageIDs).hide();
            //                        }
            //                    }
            //                }

            //                if (error > 0) {
            //                    return false;
            //                } else {
            //                    return true;
            //                }
            //            }

            //        });
            //});


            //$('#tblDimensions tr').each(function (i, el) {
            //    $(this).find('input.formClass').each(function (ii, el) {
            //        if ($(el).val().length == 0) {
            //            $('#tblDimensions').find('tr').eq(i).find('select').each(function (ix, el) {
            //                if ($(el).val() !== "None")
            //                {
            //                    var lastChar = el.id.substr(el.id.length - 1);
            //                    $("#ddlLoadErrorMessageQty" + lastChar).css("display", true ? "block" : "none");


            //                    $(this).change(function () {
            //                        $("#ddlLoadErrorMessageQty" + lastChar).css("display", false ? "block" : "none");
            //                    });

            //                    e.preventDefault();

            //                    $('#tblDimensions').find('tr').eq(i).find(':input').each(function (ix, el) {
            //                        $(this).change(function () {
            //                            $("#ddlLoadErrorMessageQty" + lastChar).css("display", false ? "block" : "none");
            //                        });

            //                        e.preventDefault();
            //                    });
            //                }

            //            });
            //        }
            //        else if ($(el).val().length != 0) {
            //            $('#tblDimensions').find('tr').eq(i).find('select').each(function (ix, el) {
            //                if ($(el).val() == "None") {
            //                    var lastChar = el.id.substr(el.id.length - 1);
            //                    $("#ddlLoadErrorMessage" + lastChar).css("display", true ? "block" : "none");

            //                    $(this).change(function () {
            //                        $("#ddlLoadErrorMessage" + lastChar).css("display", false ? "block" : "none");
            //                        $("#ddlLoadErrorMessageQty" + lastChar).css("display", false ? "block" : "none");
            //                    });

            //                    e.preventDefault();

            //                    $('#tblDimensions').find('tr').eq(i).find(':input').each(function (ix, el) {
            //                        $(this).change(function () {
            //                            $("#ddlLoadErrorMessage" + lastChar).css("display", false ? "block" : "none");
            //                            $("#ddlLoadErrorMessageQty" + lastChar).css("display", false ? "block" : "none");
            //                        });

            //                        e.preventDefault();
            //                    });
            //                }

            //            });
            //        }
            //    });
            //});


            const mass = $('.rowClass').map(function () {
                var obj = {};
                $(this).find('input.formClass, select.formClass').each(function (i, el) {
                    if (el.value != "0" && el.value != "") {

                        obj[el.name] = el.value;
                    }
                })
                return obj
            }).get()

        });
    });

    function setDescription(parcelOption) {
        $('#txtDescription').val(parcelOption);
    }
</script>
}



